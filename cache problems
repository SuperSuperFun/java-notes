-缓存穿透
  我们在项目中使用缓存通常都是先检查缓存是否存在，如果存在直接返回缓存内容，如果不存在就去查询DB然后再缓存查询结果后返回。
  如果我们查询某一个数据在缓存中一直不存在，就会造成每一次请求都查询DB，这样缓存就失去了意义，在流量大时DB可能就挂掉了。
  缓存穿透：有人利用不存在的key频繁攻击我们的应用，这个就是漏洞，可能造成缓存穿透。
  
  解决办法：为不存在的缓存预先设置一个固定值，若返回这个值，我们认为key不存在，让其继续等待访问，过了一个轮询时间，再次请求这个key，
  如果取到的值不再是预先设定的值，则可认为这个key有值，从而大量的请求被挡在了缓存之中而不是频繁访问DB。

-缓存并发
  有时候网站的并发访问高，若一个缓存失效，可能会导致多个进程同时查询DB并同时设置缓存的情况，如果并发确实非常大，这也可能造成
  DB压力过大，还有缓存频繁更新问题。
  
  解决方法：对缓存查询加锁，如果key不存在就加锁，然后查DB入缓存，然后解锁；其他进程发现有锁就等待，等解锁后再返回数据或进入DB查询。

-缓存失效
  高并发的时候，平时我们设定一个缓存的过期时间，可能会设置1分钟、5分钟这些，并发非常高的时候可能会在某一时间段同时生成了很多缓存，并且
  过期时间都是一样，如果过期时间到了这些缓存同时失效，那么高访问量的请求就同时转发到DB，造成DB压力过重。
  
  解决办法：设置缓存失效时间散开，例如使用随机数来分配时间，降低失效时间的重复率，就很难引发集体失效。
  
缓存并发针对的是一个缓存，缓存失效针对的是多个缓存。

总结：
  1.缓存穿透：查询一个必然不存在的数据。比如文章表，查询一个不存在的id，每次都会访问DB，如果有人恶意搞破坏，很可能直接对DB造成影响。
  2.缓存失效：如果缓存集中在一段时间内失效，DB的压力凸显。
